local module = {}

local playerGui = game.Players.LocalPlayer.PlayerGui

function module:handleProperties()
	local UILibrary = Instance.new("ScreenGui")
	local UIElements = Instance.new("Folder")
	local Players = game:GetService("Players")
	local BackgroundFrame = Instance.new("Frame")
	local Main = Instance.new("ScrollingFrame")
	local TextLabel = Instance.new("TextLabel")
	local ButtonArea = Instance.new("ScrollingFrame")

	UILibrary.Name = "UILibrary"
	UILibrary.Parent = game.CoreGui
	UILibrary.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	UIElements.Name = "UIElements"
	UIElements.Parent = UILibrary

	BackgroundFrame.Name = "BackgroundFrame"
	BackgroundFrame.Parent = UIElements
	BackgroundFrame.BackgroundColor3 = Color3.fromRGB(65, 60, 56)
	BackgroundFrame.BorderSizePixel = 0
	BackgroundFrame.Position = UDim2.new(0.326732665, 0, 0.186320752, 0)
	BackgroundFrame.Size = UDim2.new(0, 411, 0, 318)
	BackgroundFrame.ZIndex = -100

	Main.Name = "Main"
	Main.Parent = UIElements
	Main.BackgroundColor3 = Color3.fromRGB(210, 180, 140)
	Main.BorderColor3 = Color3.fromRGB(65, 60, 56)
	Main.BorderSizePixel = 0
	Main.ClipsDescendants = false
	Main.Position = UDim2.new(0.288118809, 0, 0.134433955, 0)
	Main.Selectable = false
	Main.Size = UDim2.new(0, 436, 0, 324)
	Main.ScrollBarThickness = 9

	TextLabel.Parent = Main
	TextLabel.BackgroundColor3 = Color3.fromRGB(162, 129, 90)
	TextLabel.BorderColor3 = Color3.fromRGB(65, 60, 56)
	TextLabel.BorderSizePixel = 0
	TextLabel.Size = UDim2.new(0, 436, 0, 30)
	TextLabel.Font = Enum.Font.LuckiestGuy
	TextLabel.Text = "UI Library"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextScaled = true
	TextLabel.TextSize = 14.000
	TextLabel.TextWrapped = true

	ButtonArea.Name = "ButtonArea"
	ButtonArea.Parent = UILibrary
	ButtonArea.BackgroundColor3 = Color3.fromRGB(210, 180, 140)
	ButtonArea.BorderColor3 = Color3.fromRGB(65, 60, 56)
	ButtonArea.BorderSizePixel = 0
	ButtonArea.ClipsDescendants = false
	ButtonArea.Position = UDim2.new(0.168316841, 0, 0.136792451, 0)
	ButtonArea.Selectable = false
	ButtonArea.Size = UDim2.new(0, 109, 0, 323)
	ButtonArea.ScrollBarThickness = 6

	local Items = Instance.new("Folder")
	local SliderObject2 = Instance.new("Frame")
	local Slider2 = Instance.new("TextButton")
	local Colorpicker = Instance.new("TextButton")
	local UIGradient = Instance.new("UIGradient")
	local TextBox2 = Instance.new("TextBox")
	local TextButton2 = Instance.new("TextButton")
	local TextLabel2 = Instance.new("TextLabel")

	--Properties:

	Items.Name = "Items"
	Items.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	Items.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	SliderObject2.Name = "SliderObject"
	SliderObject2.Parent = Items
	SliderObject2.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
	SliderObject2.BorderSizePixel = 0
	SliderObject2.Position = UDim2.new(0.148218066, 0, 0.200250819, 0)
	SliderObject2.Size = UDim2.new(0, 407, 0, 39)

	Slider2.Name = "Slider2."
	Slider2.Parent = Slider2.Object
	Slider2.Active = false
	Slider2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Slider2.BorderSizePixel = 0
	Slider2.Position = UDim2.new(-0.00128686428, 0, 0.0248048622, 0)
	Slider2.Selectable = false
	Slider2.Size = UDim2.new(0, 46, 0, 39)
	Slider2.Text = ""

	Colorpicker.Name = "Colorpicker"
	Colorpicker.Parent = Items
	Colorpicker.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Colorpicker.Position = UDim2.new(0.304950505, 0, 0.23550725, 0)
	Colorpicker.Size = UDim2.new(0, 391, 0, 84)
	Colorpicker.Font = Enum.Font.SourceSans
	Colorpicker.Text = ""
	Colorpicker.TextColor3 = Color3.fromRGB(255, 255, 255)
	Colorpicker.TextScaled = true
	Colorpicker.TextSize = 14.000
	Colorpicker.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 31, 31)), ColorSequenceKeypoint.new(0, Color3.fromRGB(252, 255, 55)), ColorSequenceKeypoint.new(0, Color3.fromRGB(252, 255, 82)), ColorSequenceKeypoint.new(0, Color3.fromRGB(128, 255, 93)), ColorSequenceKeypoint.new(0, Color3.fromRGB(138, 255, 106)), ColorSequenceKeypoint.new(0, Color3.fromRGB(88, 233, 255)), ColorSequenceKeypoint.new(0, Color3.fromRGB(106, 235, 255)), ColorSequenceKeypoint.new(0, Color3.fromRGB(94, 89, 255)), ColorSequenceKeypoint.new(0, Color3.fromRGB(116, 112, 255)), ColorSequenceKeypoint.new(0, Color3.fromRGB(53, 56, 255)), ColorSequenceKeypoint.new(0, Color3.fromRGB(87, 89, 255)), ColorSequenceKeypoint.new(0, Color3.fromRGB(163, 170, 158)), ColorSequenceKeypoint.new(0, Color3.fromRGB(106, 111, 109)), ColorSequenceKeypoint.new(0, Color3.fromRGB(154, 121, 36)), ColorSequenceKeypoint.new(0, Color3.fromRGB(135, 110, 11)), ColorSequenceKeypoint.new(1, Color3.fromRGB(179, 153, 23))}
	UIGradient.Parent = Colorpicker

	TextBox2.Parent = Items
	TextBox2.BackgroundColor3 = Color3.fromRGB(150, 128, 100)
	TextBox2.Position = UDim2.new(0.304950505, 0, 0.23550725, 0)
	TextBox2.Size = UDim2.new(0, 200, 0, 50)
	TextBox2.Font = Enum.Font.SourceSans
	TextBox2.Text = "Button"
	TextBox2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextBox2.TextScaled = true
	TextBox2.TextSize = 14.000
	TextBox2.TextWrapped = true

	TextButton2.Parent = Items
	TextButton2.BackgroundColor3 = Color3.fromRGB(150, 128, 100)
	TextButton2.Position = UDim2.new(0.304950505, 0, 0.23550725, 0)
	TextButton2.Size = UDim2.new(0, 200, 0, 50)
	TextButton2.Font = Enum.Font.SourceSans
	TextButton2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextButton2.TextScaled = true
	TextButton2.TextSize = 14.000
	TextButton2.TextWrapped = true

	TextLabel2.Parent = Items
	TextLabel2.Active = true
	TextLabel2.BackgroundColor3 = Color3.fromRGB(150, 128, 100)
	TextLabel2.Position = UDim2.new(0.304950505, 0, 0.23550725, 0)
	TextLabel2.Selectable = true
	TextLabel2.Size = UDim2.new(0, 200, 0, 50)
	TextLabel2.Font = Enum.Font.SourceSans
	TextLabel2.Text = "Button"
	TextLabel2.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel2.TextScaled = true
	TextLabel2.TextSize = 14.000
	TextLabel2.TextWrapped = true

	local fireValue = Instance.new("BoolValue")
	fireValue.Name = "Fire"
	fireValue.Parent = Slider2
end

module.Slider = playerGui.Items.SliderObject
module.ActualSlider = module.Slider.Slider
module.ClonedSlider = "hi"
module.actualCloned = "bye"

local old = UDim2.new(-0.001+1, 0, -0.001+1, 0) 
local new = UDim2.new(0.915, 0, -0.001, 0)

local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local dragStart

function module:MakeSlider()
	local slider = playerGui.Items.SliderObject:Clone()
	return slider
end 

function module:StartSliding(slider)
	local max = module:MakeSlider
	local fire = max.Slider.Fire
	local bar = module.actualCloned
	local player = game.Players.LocalPlayer
	local mouse = player:GetMouse()
	local uis = game:GetService("UserInputService")
	local ap = Vector2.new(max.AbsolutePosition.X, max.AbsolutePosition.Y)
	local as = Vector2.new(max.AbsoluteSize.X, max.AbsoluteSize.Y)
	local x = mouse.X
	local down = false --if MouseButton1 is down or not

	bar.MouseButton1Down:Connect(function()

		bar:TweenSize(UDim2.new(0, (mouse.X - ap.X), 1, 0),Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 0.1) --where ever we click, the bar's size changes to reach the position
		fire.Value = true
		down = true

	end)

	uis.InputEnded:Connect(function(input, gp)

		if input.UserInputType == Enum.UserInputType.MouseButton1 then

			down = false
			fire.Value = false

		end

	end)

	mouse.Move:Connect(function()

		if down == true then --if true, then this represents the mouse being dragged

			fire.Value = false 
			fire.Value = true

			if mouse.X < ap.X then --out of bounds (to the left)
				bar:TweenSize(UDim2.new(0, 0, 1, 0),Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 0.1)
			elseif mouse.X > (ap.X + as.X) then --out of bounds (to the right)
				bar:TweenSize(UDim2.new(0, as.X, 1, 0),Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 0.1)
			else --within bounds
				bar:TweenSize(UDim2.new(0, (mouse.X - ap.X), 1, 0),Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 0.1)
			end
		end
	end)
end

function module:NewSlider(parent, properties)
	if properties ~= nil then 
		local newSlider = module.Slider:Clone()
		module.ClonedSlider = newSlider
		module.actualCloned = module.ClonedSlider.Slider
		for i,v in pairs(properties) do 
			newSlider[properties[1]] = properties[2]
		end
		module:StartSliding(module.actualCloned)
		return newSlider.Slider
	elseif properties == nil then
		local newSlider = module.Slider:Clone()
		newSlider.Parent = parent
		module.ClonedSlider = newSlider
		module.actualCloned = module.ClonedSlider.Slider
		module:StartSliding(module.actualCloned)		
		return newSlider.Slider
	end 
end

local uiFolder = playerGui.Items
local colourPicker = uiFolder.Colorpicker
local showColour = colourPicker.SelectedColour

function module:MakePicker(parent, ColorKeyPoints)
	local percentage = 1
	if (percentage < 0) or (percentage>1) then
		--error'getColor percentage out of bounds!'
		warn'getColor got out of bounds percentage (less than 0 or greater than 1'
	end

	local closestToLeft = ColorKeyPoints[1]
	local closestToRight = ColorKeyPoints[#ColorKeyPoints]
	local LocalPercentage = .5
	local color = closestToLeft.Value

	-- This loop can probably be improved by doing something like a Binary search instead
	-- This should work fine though
	for i=1,#ColorKeyPoints-1 do
		if (ColorKeyPoints[i].Time <= percentage) and (ColorKeyPoints[i+1].Time >= percentage) then
			closestToLeft = ColorKeyPoints[i]
			closestToRight = ColorKeyPoints[i+1]
			LocalPercentage = (percentage-closestToLeft.Time)/(closestToRight.Time-closestToLeft.Time)
			color = closestToLeft.Value:lerp(closestToRight.Value,LocalPercentage)
			return color
		end
	end
	warn('Color not found!')
	showColour.BackgroundColor3 = color
	return color
end

local boxObj = uiFolder.TextBox
local buttonObj = uiFolder.TextButton
local labelObj = uiFolder.TextLabel

function module:MakeBox(parent, text)
	local new = boxObj:Clone()
	boxObj.Parent = parent 
	boxObj.Text = text
end 

function module:MakeButton(parent, text)
	local new = buttonObj:Clone()
	buttonObj.Parent = parent 
	buttonObj.Text = text
	return buttonObj
end 

function module:MakeLabel(parent, text)
	local new = labelObj:Clone()
	labelObj.Parent = parent 
	labelObj.Text = text
end 

local buttonArea = playerGui.UILibrary.ButtonArea
local out = UDim2.new(0.287, 0,0.155, 0)
local iN = UDim2.new(179, 0,0.168, 0)
local playerGui = game.Players.LocalPlayer.PlayerGui
local mouse = game.Players.LocalPlayer:GetMouse()

while buttonArea.Position == out do 
	task.wait()
	if buttonArea.Visible then 
		buttonArea.Visible = false 
	end 
end

buttonArea.Folder.Close.MouseButton1Down:Connect(function()
	buttonArea:TweenPosition(out, Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 1.25)
end)

UserInputService.InputBegan:Connect(function(input, ty)
	if ty then return end 
	if input.UserInputType == Enum.UserInputType.MouseMovement then 
		local getItems = playerGui:GetGuiObjectsAtPosition(mouse.X, mouse.Y)
		for _, interface in pairs(getItems) do 
			if interface == "ButtonArea" then 
				if buttonArea.Position == out then 
					buttonArea.Visible = true
					buttonArea:TweenPosition(iN, Enum.EasingDirection.Out, Enum.EasingStyle.Linear, 1.25)	
				end 
			end 
		end 
	end 
end)

module:handleProperties()

return module
